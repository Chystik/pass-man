syntax = "proto3";

package pb;

option go_package = "./internal/infrastructure/grpc;pb";

service UserService {
    rpc SignUp(SignUpRequest) returns (SignUpResponse) {}
    rpc Login(LoginRequest) returns (LoginResponse) {}
}

message SignUpRequest {
    User user = 1;
}

message SignUpResponse {
    Token token = 1;
    Error error = 2;
}

message LoginRequest {
    User user = 1;
}

message LoginResponse {
    Token token = 1;
    Error error = 2;
}

message Token {
    string token = 1;
}

message User {
    string login = 1;
    bytes password = 2;
}

message Error {
    string message = 1;
}

service PasswordService {
    rpc AddPassword(AddPasswordRequest) returns (AddPasswordResponse) {};
    rpc GetPassword(GetPasswordRequest) returns (GetPasswordResponse) {};
    rpc ListPassword(ListPasswordRequest) returns (ListPasswordResponse) {};
    rpc DeletePassword(DeletePasswordRequest) returns (DeletePasswordResponse) {};
}

message AddPasswordRequest {
    Password password = 1;
}

message AddPasswordResponse {
    Error error = 1;
}

message GetPasswordRequest {
    string meta = 1;
}

message GetPasswordResponse {
    Password password = 1;
    Error error = 2;
}

message ListPasswordRequest {
}

message ListPasswordResponse {
    repeated Password passwordList = 1;
    Error error = 2;
}

message DeletePasswordRequest {
    string meta = 1;
}

message DeletePasswordResponse {
    Error error = 1;
}

message Password {
    string meta = 1;
    string username = 2;
    string password = 3;
}

service CardService {
    rpc AddCard(AddCardRequest) returns (AddCardResponse) {};
    rpc GetCard(GetCardRequest) returns (GetCardResponse) {};
    rpc ListCard(ListCardRequest) returns (ListCardResponse) {};
    rpc DeleteCard(DeleteCardRequest) returns (DeleteCardResponse) {};
}

message AddCardRequest {
    Card card = 1;
}

message AddCardResponse {
    Error error = 1;
}

message GetCardRequest {
    string meta = 1;
}

message GetCardResponse {
    Card card = 1;
    Error error = 2;
}

message ListCardRequest {
}

message ListCardResponse {
    repeated Card cardList = 1;
    Error error = 2;
}

message DeleteCardRequest {
    string meta = 1;
}

message DeleteCardResponse {
    Error error = 1;
}

message Card {
    string meta = 1;
    string number = 2;
    string valid_thru = 3;
    string holder = 4;
    uint32 cvv = 5;
}

service FileService {
    rpc Upload(stream UploadFileRequest) returns (UploadFileResponse) {};
    rpc Download(DownloadFileRequest) returns (stream DownloadFileResponse) {};
    rpc ListFiles(ListFileRequest) returns (ListFileResponse) {};
    rpc Delete(DeleteFileRequest) returns (DeleteFileResponse) {};
}

message UploadFileRequest {
    oneof data {
    File file = 1;
    bytes chunk_data = 2;
  };
}

message UploadFileResponse {
    Error error = 1;
    uint32 size = 2;
}

message DownloadFileRequest {
    File file = 1;
}

message DownloadFileResponse {
    oneof data {
    File file = 1;
    bytes chunk_data = 2;
  };
    Error error = 3;
}

message ListFileRequest {
}

message ListFileResponse {
    repeated File fileList = 1;
    Error error = 2;
}

message DeleteFileRequest {
    File file = 1;
}

message DeleteFileResponse {
    Error error = 1;
}

message File {
    uint32 id = 1;
    string meta = 2;
    string full_name = 3;
}