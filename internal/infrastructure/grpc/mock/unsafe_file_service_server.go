// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafeFileServiceServer is an autogenerated mock type for the UnsafeFileServiceServer type
type UnsafeFileServiceServer struct {
	mock.Mock
}

type UnsafeFileServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeFileServiceServer) EXPECT() *UnsafeFileServiceServer_Expecter {
	return &UnsafeFileServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedFileServiceServer provides a mock function with given fields:
func (_m *UnsafeFileServiceServer) mustEmbedUnimplementedFileServiceServer() {
	_m.Called()
}

// UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedFileServiceServer'
type UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedFileServiceServer is a helper method to define mock.On call
func (_e *UnsafeFileServiceServer_Expecter) mustEmbedUnimplementedFileServiceServer() *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call {
	return &UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedFileServiceServer")}
}

func (_c *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call) Run(run func()) *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call) Return() *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call) RunAndReturn(run func()) *UnsafeFileServiceServer_mustEmbedUnimplementedFileServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnsafeFileServiceServer creates a new instance of UnsafeFileServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeFileServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeFileServiceServer {
	mock := &UnsafeFileServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
