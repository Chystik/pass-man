// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafePasswordServiceServer is an autogenerated mock type for the UnsafePasswordServiceServer type
type UnsafePasswordServiceServer struct {
	mock.Mock
}

type UnsafePasswordServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafePasswordServiceServer) EXPECT() *UnsafePasswordServiceServer_Expecter {
	return &UnsafePasswordServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedPasswordServiceServer provides a mock function with given fields:
func (_m *UnsafePasswordServiceServer) mustEmbedUnimplementedPasswordServiceServer() {
	_m.Called()
}

// UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedPasswordServiceServer'
type UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedPasswordServiceServer is a helper method to define mock.On call
func (_e *UnsafePasswordServiceServer_Expecter) mustEmbedUnimplementedPasswordServiceServer() *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call {
	return &UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedPasswordServiceServer")}
}

func (_c *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call) Run(run func()) *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call) Return() *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call) RunAndReturn(run func()) *UnsafePasswordServiceServer_mustEmbedUnimplementedPasswordServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnsafePasswordServiceServer creates a new instance of UnsafePasswordServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafePasswordServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafePasswordServiceServer {
	mock := &UnsafePasswordServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
